{"version":3,"sources":["serviceWorker.js","network.js","store/actions.js","components/Chat.js","store/reducer.js","store/index.js","components/Welcome.js","components/Home.js","components/SocialButtons.js","components/Form.js","components/Login.js","components/OAuthCallback.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","create","LoginRequest","Symbol","LoginFailure","LoginSuccess","RegisterRequest","RegisterFailure","RegisterSuccess","ConfirmRequest","ConfirmFailure","ConfirmSuccess","OAuthRequest","OAuthFailure","OAuthCallbackRequest","OAuthCallbackFailure","OAuthCallbackSuccess","FetchMeRequest","FetchMeSuccess","FetchMeFailure","FetchMessagesRequest","FetchMessagesSuccess","FetchMessagesFailure","fetchMessages","dispatch","getState","type","token","client","get","headers","Authorization","concat","then","response","messages","data","catch","error","status","localStorage","removeItem","reload","console","WebsocketConnected","WebsocketDisconnected","NewMessage","socket","connect","state","isWebsocketConnected","Object","objectSpread","bindActionCreators","_ref","_useState","useState","_useState2","slicedToArray","message","setMessage","useEffect","io","on","log","react_default","a","createElement","className","style","minHeight","display","flexDirection","flexGrow","fetching","role","list","length","map","text","onSubmit","event","preventDefault","emit","value","disabled","onChange","target","placeholder","initialState","getItem","login","processing","registration","errors","complete","confirmation","oauth","oauthCallback","me","createStore","arguments","undefined","action","setItem","applyMiddleware","thunkMiddleware","Welcome","rest","objectWithoutProperties","react_router","assign","render","to","mapDispatchToProps","oauthAction","_ref4","provider","href","getOAuthLink","onClick","Form","props","changeState","setValue","defineProperty","name","noValidate","title","fields","field","inputClassname","key","required","button","components_SocialButtons","icon","loginAction","email","password","post","validated","providerMap","vkontakte","fb","github","oauthCallbackAction","_ref5","code","params","URLSearchParams","search","Fragment","react_router_dom","ReactDOM","es","store","exact","path","component","Home","Login","OAuthCallback","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.cf1e453f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nexport default axios.create();\n","import client from '../network';\n\nexport const LoginRequest = Symbol('LoginRequest');\nexport const LoginFailure = Symbol('LoginFailure');\nexport const LoginSuccess = Symbol('LoginSuccess');\n\nexport function login({email, password}) {\n  return (dispatch, getState) => {\n    dispatch({type: LoginRequest});\n    \n    client.post('/api/login', {\n      email, password\n    }).then(response => {\n      dispatch({type: LoginSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: LoginFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const RegisterRequest = Symbol('RegisterRequest');\nexport const RegisterFailure = Symbol('RegisterFailure');\nexport const RegisterSuccess = Symbol('RegisterSuccess');\n\nexport function register({email, displayName, password}) {\n  return (dispatch, getState) => {\n    dispatch({type: RegisterRequest});\n    \n    client.post('/api/register', {\n      email, displayName, password\n    }).then(response => {\n      dispatch({type: RegisterSuccess});\n    }).catch(error => {\n      dispatch({type: RegisterFailure, errors: error.response.data.errors});\n    });\n  }\n}\n\nexport const ConfirmRequest = Symbol('ConfirmRequest');\nexport const ConfirmFailure = Symbol('ConfirmFailure');\nexport const ConfirmSuccess = Symbol('ConfirmSuccess');\n\nexport function confirm({verificationToken}) {\n  return (dispatch, getState) => {\n    dispatch({type: ConfirmRequest});\n    \n    client.post('/api/confirm', {\n      verificationToken\n    }).then(response => {\n      dispatch({type: ConfirmSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: ConfirmFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const OAuthRequest = Symbol('OAuthRequest');\nexport const OAuthFailure = Symbol('OAuthFailure');\n\nexport function oauth({provider}) {\n  return (dispatch, getState) => {\n    dispatch({type: OAuthRequest});\n    \n    client.get(`/api/oauth/${provider}`)\n      .then(response => {\n        window.location.href = response.data.location;\n      })\n      .catch(error => {\n        dispatch({type: OAuthFailure, error: error.response.data.error});\n      });\n  }\n}\n\nexport const OAuthCallbackRequest = Symbol('OAuthCallbackRequest');\nexport const OAuthCallbackFailure = Symbol('OAuthCallbackFailure');\nexport const OAuthCallbackSuccess = Symbol('OAuthCallbackSuccess');\n\nexport function oauthCallback({provider, code}) {\n  return (dispatch, getState) => {\n    dispatch({type: OAuthCallbackRequest});\n    \n    client.post('/api/oauth_callback', {\n      provider\n    }, {\n      params: { code }\n    }).then(response => {\n      dispatch({type: OAuthCallbackSuccess, token: response.data.token});\n    }).catch(error => {\n      dispatch({type: OAuthCallbackFailure, error: error.response.data.error});\n    });\n  }\n}\n\nexport const FetchMeRequest = Symbol('FetchMeRequest');\nexport const FetchMeSuccess = Symbol('FetchMeSuccess');\nexport const FetchMeFailure = Symbol('FetchMeRequest');\n\nexport function fetchMe() {\n  return (dispatch, getState) => {\n    dispatch({type: FetchMeRequest});\n    \n    const state = getState();\n    const token = state.token;\n    \n    client.get('/api/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      dispatch({type: FetchMeSuccess, data: response.data});\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem('token');\n        window.location.reload(true);\n        return;\n      }\n      console.error(error.response.data);\n      dispatch({type: FetchMeFailure});\n    });\n  }\n}\n\nexport const FetchMessagesRequest = Symbol('FetchMessagesRequest');\nexport const FetchMessagesSuccess = Symbol('FetchMessagesSuccess');\nexport const FetchMessagesFailure = Symbol('FetchMessagesFailure');\n\nexport function fetchMessages() {\n  return (dispatch, getState) => {\n    dispatch({type: FetchMessagesRequest});\n    \n    const state = getState();\n    const token = state.token;\n    \n    client.get('/api/messages', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      dispatch({type: FetchMessagesSuccess, messages: response.data.messages});\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem('token');\n        window.location.reload(true);\n        return;\n      }\n      console.error(error.response.data);\n      dispatch({type: FetchMessagesFailure});\n    });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport io from 'socket.io-client';\nimport { fetchMessages } from '../store/actions';\n\nexport const WebsocketConnected = Symbol('WebsocketConnected');\nexport const WebsocketDisconnected = Symbol('WebsocketDisconnected');\nexport const NewMessage = Symbol('NewMessage');\n\nlet socket = null;\n\nfunction Chat({token, messages, isWebsocketConnected, dispatch, fetchMessages}) {\n  const [message, setMessage] = useState('');\n  \n  useEffect(() => {\n    socket = io(`http://localhost:3001?token=${token}`);\n  \n    fetchMessages();\n\n    socket.on('connect', () => {\n      console.log('connect');\n      dispatch({type: WebsocketConnected});\n    });\n\n    socket.on('disconnect', () => {\n      console.log('disconnect');\n      dispatch({type: WebsocketDisconnected});\n    });\n    \n    socket.on('system_message', message => {\n      console.log('system_message', message);\n      dispatch({type: NewMessage, message});\n    });\n  \n    socket.on('user_message', message => {\n      console.log('user_message', message);\n      dispatch({type: NewMessage, message});\n    });\n  }, []);\n  \n  function onSubmit(event) {\n    event.preventDefault();\n  \n    if (!isWebsocketConnected) return;\n    if (!message) return;\n    \n    socket.emit('message', message);\n    setMessage('');\n  }\n  \n  return (\n    <main className=\"container\">\n      <div style={{minHeight: '100vh'}} className=\"row justify-content-center\">\n        <div className=\"col col-md-6\" style={{display: 'flex', flexDirection: 'column'}}>\n          <div className=\"my-4\" style={{flexGrow: 1}}>\n            {messages.fetching &&\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            }\n            {!messages.fetching && messages.list.length === 0 &&\n              <p className=\"text-muted\">Сообщений пока нет</p>\n            }\n            {messages.list.map(message => {\n              return (\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">{message.text}</p>\n                    <p className=\"card-text text-muted\">Timothy, 10:29</p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <form\n            onSubmit={onSubmit}\n            className=\"form-inline form-row text-center my-4\">\n            <input\n              type=\"text\"\n              value={message}\n              disabled={!isWebsocketConnected}\n              onChange={event => setMessage(event.target.value)}\n              className=\"form-control col\"\n              placeholder=\"message\" />\n            <button\n              disabled={!isWebsocketConnected}\n              type=\"submit\"\n              className=\"btn btn-info\">Send</button>\n          </form>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    messages: state.messages,\n    isWebsocketConnected: state.isWebsocketConnected\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ fetchMessages }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import {\n  ConfirmFailure,\n  ConfirmRequest,\n  ConfirmSuccess,\n  LoginFailure,\n  LoginRequest,\n  LoginSuccess,\n  OAuthCallbackFailure,\n  OAuthCallbackRequest,\n  OAuthCallbackSuccess,\n  OAuthFailure,\n  OAuthRequest,\n  RegisterFailure,\n  RegisterRequest,\n  RegisterSuccess,\n  FetchMessagesSuccess, \n  FetchMessagesRequest,\n  FetchMessagesFailure,\n  FetchMeRequest,\n  FetchMeSuccess,\n  FetchMeFailure\n} from './actions';\nimport {WebsocketConnected, WebsocketDisconnected} from '../components/Chat';\n\nconst token = localStorage.getItem('token') || null;\n\nconst initialState = {\n  token,\n  login: {\n    error: null,\n    processing: false,\n  },\n  registration: {\n    errors: null,\n    processing: false,\n    complete: false,\n  },\n  confirmation: {\n    error: null,\n    processing: false,\n  },\n  oauth: {\n    error: null,\n    processing: false,\n  },\n  oauthCallback: {\n    error: null,\n    processing: false,\n  },\n  isWebsocketConnected: false,\n  messages: {\n    fetching: false,\n    list: []\n  },\n  me: {\n    data: {},\n    fetching: false,\n  }\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LoginRequest:\n      return {\n        ...state,\n        login: { ...initialState.login, processing: true }\n      };\n    case LoginSuccess:\n      localStorage.setItem('token', action.token);\n      return {\n        ...state,\n        login: initialState.login,\n        token: action.token\n      };\n    case LoginFailure:\n      return {\n        ...state,\n        login: { ...initialState.login, error: action.error, processing: false }\n      };\n    case RegisterRequest:\n      return {\n        ...state,\n        registration: { ...initialState.registration, processing: true }\n      };\n    case RegisterSuccess:\n      return {\n        ...state,\n        registration: { ...initialState.registration, processing: false, complete: true, }\n      };\n    case RegisterFailure:\n      return {\n        ...state,\n        registration: { ...initialState.registration, errors: action.errors, processing: false }\n      };\n    case ConfirmRequest:\n      return {\n        ...state,\n        confirmation: { ...initialState.confirmation, processing: true }\n      };\n    case ConfirmSuccess:\n      localStorage.setItem('token', action.token);\n      return { ...state, confirmation: initialState.confirmation, token: action.token };\n    case ConfirmFailure:\n      return {\n        ...state,\n        confirmation: { ...initialState.confirmation, error: action.error, processing: false }\n      };\n    case OAuthRequest:\n      return {\n        ...state,\n        oauth: { ...initialState.oauth, processing: true }\n      };\n    case OAuthFailure:\n      return {\n        ...state, oauth: { ...initialState.oauth, error: action.error, processing: false }\n      };\n    case OAuthCallbackRequest:\n      return {\n        ...state,\n        oauthCallback: { ...initialState.oauthCallback, processing: true }\n      };\n    case OAuthCallbackFailure:\n      return {\n        ...state,\n        oauthCallback: { ...initialState.oauthCallback, error: action.error, processing: false }\n      };\n    case OAuthCallbackSuccess:\n      localStorage.setItem('token', action.token);\n      return { ...state, oauthCallback: initialState.oauthCallback, token: action.token };\n    case FetchMessagesRequest:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          fetching: true\n        }\n      };\n    case FetchMessagesSuccess:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          list: action.messages.concat(state.messages),\n          fetching: false\n        }\n      };\n    case FetchMessagesFailure:\n      return {\n        ...state,\n        messages: {\n          ...state.messages,\n          fetching: false,\n        }\n      };\n    case FetchMeRequest:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: {},\n          fetching: true,\n        }\n      };\n    case FetchMeSuccess:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: action.data,\n          fetching: false,\n        }\n      };\n    case FetchMeFailure:\n      return {\n        ...state,\n        me: {\n          ...state.me,\n          data: {},\n          fetching: false,\n        }\n      };\n    case WebsocketConnected:\n      return { ...state, isWebsocketConnected: true };\n    case WebsocketDisconnected:\n      return { ...state, isWebsocketConnected: false };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducer';\n\nexport default createStore(\n  reducer,\n  applyMiddleware(thunkMiddleware)\n);\n","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <main className=\"container\">\n      <div className=\"row login-form justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <div className=\"text-center border border-light p-5\">\n            <p className=\"h4 mb-4\">Добро пожаловать</p>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Welcome from './Welcome';\n\nfunction Home({ token, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => !!token\n        ? <Welcome />\n        : <Redirect to=\"/login\" /> } />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return { token: state.token };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { oauth } from '../store/actions';\n\nfunction SocialButtons({ oauth, oauthAction }) {\n  function getOAuthLink(provider) {\n    return () => oauthAction({provider});\n  }\n\n  return (\n    <div className=\"text-center\">\n      <p>или используйте социальные сети:</p>\n      \n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('facebook')}>\n        <i className=\"fab fa-facebook-f\"/>\n      </button>\n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('vkontakte')}>\n        <i className=\"fab fa-vk\"/>\n      </button>\n      <button className=\"btn btn-link btn-lg text-info mx-2\" onClick={getOAuthLink('github')}>\n        <i className=\"fab fa-github\"/>\n      </button>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { oauth: state.oauth };\n}\n\nconst mapDispatchToProps = { oauthAction: oauth };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SocialButtons);\n","import React, { useState } from 'react';\nimport SocialButtons from './SocialButtons';\n\nexport default function Form(props) {\n  const [state, changeState] = useState({});\n  \n  function setValue(event) {\n    changeState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  }\n  \n  return (\n    <main className=\"container\">\n      <div className=\"row justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <form\n            onSubmit={(event) => props.onSubmit(event, state)}\n            className=\"text-center border border-light p-5\"\n            noValidate>\n            \n            <p className=\"h4 mb-4\">{props.title}</p>\n            \n            {props.error && <p className=\"text-left text-danger\">{props.error}</p>}\n  \n            {props.fields.map(field => {\n              let inputClassname = \"form-control\";\n              if (props.errors) {\n                if (props.errors[field.name]) {\n                  inputClassname += \" is-invalid\";\n                } else {\n                  inputClassname += \" is-valid\";\n                }\n              }\n    \n              return (\n                <div className=\"form-row mb-4\" key={field.name} >\n                  <input\n                    value={state[field.name] || \"\"}\n                    onChange={setValue}\n                    type={field.type}\n                    name={field.name}\n                    required\n                    className={inputClassname}\n                    disabled={props.disabled}\n                    placeholder={field.placeholder} />\n                  {(props.errors && props.errors[field.name]) && (\n                    <div className=\"invalid-feedback text-left\">\n                      {props.errors[field.name]}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n\n            <button\n              disabled={props.disabled}\n              className=\"btn btn-info btn-block my-4\"\n              type=\"submit\">{props.button}</button>\n          </form>\n\n          <SocialButtons />\n        </div>\n      </div>\n    </main>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport Form from './Form';\nimport { login } from '../store/actions';\n\nconst fields = [\n  {type: 'email', name: 'email', placeholder: 'email', icon: 'fa-at'},\n  {type: 'password', name: 'password', placeholder: 'пароль', icon: 'fa-key'},\n];\n\nfunction Login({token, login, loginAction}) {\n  if (token) return <Redirect to=\"/\" />;\n  \n  function onSubmit(event, fields) {\n    event.preventDefault();\n    if (login.processing) return;\n  \n    loginAction(fields);\n  }\n  \n  return (\n    <Form\n      disabled={login.processing}\n      title=\"Вход\"\n      validated={login.errors}\n      error={login.error}\n      onSubmit={onSubmit}\n      fields={fields}\n      button=\"Войти\" />\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { login: state.login, token: state.token };\n}\n\nconst mapDispatchToProps = { loginAction: login };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Link } from 'react-router-dom';\nimport { oauthCallback } from '../store/actions';\n\nconst providerMap = {\n  vkontakte: 'VK',\n  fb: 'Facebook',\n  github: 'Github',\n};\n\nfunction OAuthCallback({token, oauthCallback, oauthCallbackAction, match, location}) {\n  if (token) return <Redirect to=\"/\" />;\n  \n  const params = new URLSearchParams(location.search);\n  const provider = match.params.provider;\n  \n  useEffect(() => {\n    if (params.get('error')) return;\n    oauthCallbackAction({code: params.get('code'), provider});\n  }, []);\n\n  return (\n    <main className=\"container\">\n      <div className=\"row login-form justify-content-center align-items-center\">\n        <div className=\"col col-md-6\">\n          <div className=\"text-center border border-light p-5\">\n            <p className=\"h4 mb-4\">Логин через {providerMap[provider]}</p>\n  \n            {oauthCallback.error || params.get('error')\n              ? <React.Fragment>\n                <p className=\"text-danger\">При выполнени операции произошла ошибка.</p>\n                <p className=\"text-danger\">{oauthCallback.error || \"\"}</p>\n                <Link to=\"/\">Вход</Link>\n              </React.Fragment>\n              : <React.Fragment>\n                <p>Пожалуйста, подождите.</p>\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Загрузка...</span>\n                </div>\n              </React.Fragment>\n            }\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { oauthCallback: state.oauthCallback, token: state.token };\n}\n\nconst mapDispatchToProps = { oauthCallbackAction: oauthCallback };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OAuthCallback);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport OAuthCallback from './components/OAuthCallback';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/oauth/:provider\" component={OAuthCallback} />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}